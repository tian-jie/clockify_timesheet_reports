@{
    ViewBag.Title = "Home Page";
}

<div class="container">

    <div class="form-group col-sm-5">
        <div class="col-sm-10">
            <div data-date-format="yyyy-mm-dd" class="input-append date date-picker" style="display:inline-block;">
                <div class="input-group">
                    <input type="datetime" name="BeginDate" id="BeginDate" class="form-control" placeholder="Begin Date" />
                    <span class="input-group-addon"><i class="fa fa-calendar bigger-110"></i></span>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-2">
        <button id="submit">确定</button>
    </div>
</div>

<div class="jumbotron" style="clear:both">

    <!-- 为ECharts准备一个具备大小（宽高）的Dom -->
    <div id="main" style="height:600px"></div>
    <!-- ECharts单文件引入 -->
  
    <script type="text/javascript">
        // 路径配置
        var GetBar = function () {
            require.config({
                paths: {
                    echarts: '../../scripts/build/dist/'
                }
            });

            // 使用
            // 使用
            require(
                [
                    'echarts',
                    'echarts/chart/bar' // 使用柱状图就加载bar模块，按需加载
                ],
                function (ec) {
                    // 基于准备好的dom，初始化echarts图表
                    var myChart = ec.init(document.getElementById('main'));

                    var option = {
                        tooltip: {
                            show: true,
                            trigger: 'item'
                        },
                        legend: {
                            data: ['关注人数', '未关注人数']
                        },
                        toolbox: {
                            show: true,
                            feature: {
                                mark: { show: true },
                                dataView: { show: true, readOnly: false },
                                magicType: { show: true, type: ['line', 'bar', 'stack', 'tiled'] },
                                restore: { show: true },
                                saveAsImage: { show: true }
                            }
                        },
                        calculable: true,
                        xAxis: [
                            {
                                type: 'category',
                                data: [],
                                axisLabel: {
                                    margin:10,
                                    rotate: 45, //刻度旋转45度角
                                    textStyle: {
                                        color: "red",
                                        fontSize: 12
                                    }
                                }

                            }
                        ],
                        grid: { // 控制图的大小，调整下面这些值就可以，
                            x: 40,
                            x2: 100,
                            y2: 100,// y2可以控制 X轴跟Zoom控件之间的间隔，避免以为倾斜后造成 label重叠到zoom上
                        },

                        yAxis: [
                            {
                                type: 'value'
                            }
                        ],
                        series: [
                            {
                                name: '关注人数',

                                type: 'bar',
                                barWidth: 60,
                                data: [],

                                itemStyle: {
                                    normal: {
                                        label: {
                                            show: true,

                                            position: 'top',

                                            textStyle: {
                                                fontSize: 12,
                                                color: "green"

                                            }

                                        }
                                    }
                                }
                            },

                            {
                                name: '未关注人数',
                                type: 'bar',
                                barWidth: 60,                   // 系列级个性化，柱形宽度
                                itemStyle: {
                                    normal: {                   // 系列级个性化，横向渐变填充
                                        borderRadius: 5,
                                        color: (function () {
                                            var zrColor = require('zrender/tool/color');
                                            return zrColor.getLinearGradient(
                                                0, 0, 1000, 0,
                                                [[0, 'rgba(30,144,255,0.8)'], [1, 'rgba(138,43,226,0.8)']]
                                            )
                                        })(),
                                        label: {
                                            show: true,
                                            textStyle: {
                                                fontSize: '20',
                                                fontFamily: '微软雅黑',
                                                fontWeight: 'bold'
                                            }
                                        }
                                    }
                                },
                                data: [],
                                markLine: {
                                    data: [
                                        { type: 'average', name: '平均值' },
                                        { type: 'max' },
                                        { type: 'min' }
                                    ]
                                }
                            }
                        ]
                    };


                    //// 为echarts对象加载数据
                    //myChart.setOption(option); //通过Ajax获取数据
                    var begindate = $('#BeginDate').val();
                    $.ajax({
                        type: "post",

                        async: false, //同步执行
                        url: "Department",
                        data: { date: begindate },

                        dataType: "json", //返回数据形式为json

                        success: function (result) {

                            if (result) {
                                $('#report').empty();
                                //将返回的category和series对象赋值给options对象内的category和series
                                var template = '<table id="reporting_table" class="table table-hover table-striped">' +
                                    '<thead>' +
                                    '<tr>' +
                                    '<th style="text-align: center;">@T("部门")</th>' +
                                    '<th>@T("关注人数")</th>' +
                                    '<th>@T("未关注人数")</th>' +
                                    '</tr>' +
                                    ' </thead>' +
                                    '<tbody>';
                                var data1 = option.series[0].data;
                                var data2 = option.series[1].data;
                                var xAxis = option.xAxis[0].data;
                                var sumscan = 0;
                                var sumsuncan = 0;
                                for (var i = 0; i <= result.Data.length - 1; i++) {
                                    //data1.push({ name: result.Data[i].name, value: result.Data[i].value || 0 });
                                    //data2.push({ name: result.UnData[i].name, value: result.UnData[i].value || 0 });
                                    data1.push(result.Data[i].Sereisvalue);
                                    data2.push(result.UnData[i].Sereisvalue);
                                    xAxis.push(result.xAxis[i]);

                                    template = template+
                                        ' <tr class="child_row">' +
                                        '<td>' + result.xAxis[i] + '</td>' +
                                        '<td class="scan">' + result.Data[i].Sereisvalue + '</td>' +
                                        '<td class="unscan">' + result.UnData[i].Sereisvalue + '</td>' +
                                        '</tr>';
                                    sumscan += parseInt(result.Data[i].Sereisvalue);
                                    sumsuncan += parseInt(result.UnData[i].Sereisvalue);
                                }
                                template = template + ' <tr>' +
                                    '<td>企业号总数</td>' +
                                        '<td >' + sumscan + '</td>' +
                                        '<td >' + sumsuncan + '</td>' +
                                        '</tr>'+
                                    '</tbody></table>';

                                myChart.hideLoading();

                                myChart.setOption(option);

                                window.onresize = myChart.resize;
                                $('#report').append(template);
                                
                            }

                        },

                        error: function (errorMsg) {

                            alert("不好意思，图表请求数据失败啦!");

                        }

                    });
                }
            );
        };
    </script>

    <script>
        $('#submit').click(function () {

            GetBar();

        });
        //datepicker plugin
        $(document).ready(function () {
            $('.date-picker').datepicker({
                autoclose: true,
                todayHighlight: true,
                dateFormat: 'yyyy-mm-dd',
                minDate: -10,
                maxDate: "+1M +10D",
            });
        });

        
    </script>
</div>
<div id="report" style="position:relative">
    
</div>


