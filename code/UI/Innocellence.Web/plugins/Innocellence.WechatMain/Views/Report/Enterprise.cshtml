@{
    ViewBag.Title = "Home Page";
}

<div class="container">

    <div class="form-group col-sm-5">

        <div data-date-format="yyyy-mm-dd" class="input-append date date-picker" style="display:inline-block;">
            <div class="input-group">
                <input type="datetime" name="BeginDate" id="BeginDate" class="form-control" placeholder="Begin Date" />
                <span class="input-group-addon"><i class="fa fa-calendar bigger-110"></i></span>
            </div>
        </div>
    </div>
    <div class="col-sm-2">
        <button id="submit">确定</button>
    </div>
</div>

<div class="jumbotron" style="clear:both">

    <!-- 为ECharts准备一个具备大小（宽高）的Dom -->
    <div id="main" style="height:400px"></div>
    <!-- ECharts单文件引入 -->
    <script src="http://echarts.baidu.com/build/dist/echarts.js"></script>
    <script type="text/javascript">
        // 路径配置
        var GetBar = function () {
            require.config({
                paths: {
                    echarts: 'http://echarts.baidu.com/build/dist'
                }
            });

            // 使用
            // 使用
            require(
                [
                    'echarts',
                    'echarts/chart/bar' // 使用柱状图就加载bar模块，按需加载
                ],
                function (ec) {
                    // 基于准备好的dom，初始化echarts图表
                    var myChart = ec.init(document.getElementById('main'));

                    var option = {
                        tooltip: {
                            show: true,
                            trigger: 'item'
                        },
                        legend: {
                            data: ['关注百分比', '未关注百分比']
                        },
                        toolbox: {
                            show: true,
                            feature: {
                                mark: { show: true },
                                dataView: { show: true, readOnly: false },
                                magicType: { show: true, type: ['line', 'bar', 'stack', 'tiled'] },
                                restore: { show: true },
                                saveAsImage: { show: true }
                            }
                        },
                        calculable: true,
                        xAxis: [
                            {
                                type: 'category',
                                data: []
                            }
                        ],
                        yAxis: [
                            {
                                type: 'value'
                            }
                        ],
                        series: [
                            {
                                name: '关注百分比',

                                type: 'bar',
                                barWidth: 40,
                                data: [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3],

                                itemStyle: {
                                    normal: {
                                        label: {
                                            show: true,

                                            position: 'top',

                                            textStyle: {
                                                fontSize: 12,
                                                color: "green"

                                            },

                                            formatter: function (a, b, c) {

                                                return 2 + "%";

                                            }

                                        }
                                    }
                                }
                            },

                            {
                                name: '未关注百分比',
                                type: 'bar',
                                barWidth: 40,                   // 系列级个性化，柱形宽度
                                itemStyle: {
                                    normal: {                   // 系列级个性化，横向渐变填充
                                        borderRadius: 5,
                                        color: (function () {
                                            var zrColor = require('zrender/tool/color');
                                            return zrColor.getLinearGradient(
                                                0, 0, 1000, 0,
                                                [[0, 'rgba(30,144,255,0.8)'], [1, 'rgba(138,43,226,0.8)']]
                                            )
                                        })(),
                                        label: {
                                            show: true,
                                            textStyle: {
                                                fontSize: '20',
                                                fontFamily: '微软雅黑',
                                                fontWeight: 'bold'
                                            }
                                        }
                                    }
                                },
                                data: [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3],
                                markLine: {
                                    data: [
                                        { type: 'average', name: '平均值' },
                                        { type: 'max' },
                                        { type: 'min' }
                                    ]
                                }
                            }
                        ]
                    };


                    //// 为echarts对象加载数据
                    //myChart.setOption(option); //通过Ajax获取数据
                    var begindate = $('#BeginDate').val();
                    $.ajax({
                        type: "post",

                        async: false, //同步执行
                        url: "Statistics",
                        data: { state: '2', begindate: begindate, enddate: enddate },

                        dataType: "json", //返回数据形式为json

                        success: function (result) {

                            if (result) {

                                //将返回的category和series对象赋值给options对象内的category和series

                                var data1 = option.series[0].data;
                                var data2 = option.series[1].data;
                                for (var i = 0; i <= result.Data.length - 1; i++) {
                                    data1.push({ name: result.Data[i].name, value: result.Data[i].value || 0 });
                                    data2.push({ name: result.Data[i].name, value: result.Data[i].value || 0 });
                                    options.xAxis.data.push(result.xAxis[i]);
                                }

                                //options.series.data = result.series;

                                //options.legend.data = result.legend;

                                myChart.hideLoading();

                                myChart.setOption(options);

                            }

                        },

                        error: function (errorMsg) {

                            alert("不好意思，图表请求数据失败啦!");

                        }

                    });
                }
            );
        };
    </script>

    <script>
        $('#submit').click(function () {
          
                GetBar();
          
        });
        //datepicker plugin
        $(document).ready(function () {
            $('.date-picker').datepicker({
                autoclose: true,
                todayHighlight: true,
                dateFormat: 'yyyy-mm-dd',
                minDate: -10,
                maxDate: "+1M +10D",
            });
        });
    </script>
</div>



