@{
    ViewBag.Title = "项目统计";
}

<div class="row">

    <div class="col-xs-12">

        <div class="widget-box">
            <label>项目ID：</label><label id="ProjectGid" class="data-projectGid"></label><br />
            <label>项目名称：</label><label id="ProjectName" class="data-projectName"></label><br />
            <label>项目估算总工时：</label><label id="EstimateEffort" class="data-estimateEffort"></label><br />
            <label>项目估算总费用：</label><label id="EstimateEffortRate" class="data-estimateEffortRate"></label><br />
            <label>项目花费总工时：</label><label id="SpentManHour" class="data-spentManHour"></label><br />
            <label>项目花费总费用：</label><label id="SpentManHourRate" class="data-spentManHourRate"></label><br />
            <label>项目花费百分比：</label><label id="UsedPercetange" class="data-spentManHourRate"></label><br />
        </div>
        <div class="widget-box">
            <div class="widget-content nopadding">
                <div class="table table-bordered data-table" id="table" style="table-layout: fixed;">
                    @*<thead>
                            <tr>
                                <th style="width: 90px; text-align: center;">Employee Id</th>
                                <th style="width: 120px">Employee</th>
                                <th style="width: 120px">Role</th>
                                <th style="width: 80px">Rate</th>
                                <th style="width: 10%">W01</th>
                                <th style="width: 10%">W02</th>
                                <th style="width: 10%">W03</th>
                                <th style="width: 10%">W.....</th>
                                <th style="width: 10%">Total Hours</th>
                                <th style="width: 10%">Total Hours (Rate)</th>
                            </tr>
                        </thead>*@
                </div>
            </div>
        </div>

    </div>

</div>

@section scripts_Foot
{
    <script type="text/javascript">
        $(document).ready(function () {

            $.ajax({
                url: "GetProjectAccountingInfo",
                method: 'POST',
                data: {
                    projectGid: getQueryVariable("projectGid")
                },
                success: function (data) {
                    document.getElementById('ProjectGid').innerHTML = data.ProjectGid;
                    document.getElementById('ProjectName').innerHTML = data.ProjectName;
                    document.getElementById('EstimateEffort').innerHTML = data.EstimatedSpentManHour;
                    document.getElementById('EstimateEffortRate').innerHTML = data.EstimatedSpentManHourRate;
                    document.getElementById('SpentManHour').innerHTML = data.SpentManHour;
                    document.getElementById('SpentManHourRate').innerHTML = data.SpentManHourRate;
                    document.getElementById('UsedPercetange').innerHTML = (data.SpentManHourRate * 100 / data.EstimatedSpentManHourRate).toFixed(2) + '%';

                    // 处理table的问题
                    var columns = [
                        //{
                        //    type: 'hidden',
                        //    name: 'EmployeeGid',
                        //    title: 'EmployeeGid',
                        //    width: '120px'
                        //}, {
                        //    type: 'hidden',
                        //    name: 'Id',
                        //    title: 'Id',
                        //    width: '120px'
                        //}, {
                        //    type: 'hidden',
                        //    name: 'TotalEffortByWeek',
                        //    title: 'TotalEffortByWeek',
                        //    width: '120px'
                        //},
                        {
                            name: 'EmployeeName',
                            title: 'Employee',
                            width: '120px'
                        }, {
                            name: 'EmployeeRole',
                            title: 'Role',
                            align: 'center',
                            valign: 'middle',
                            width: '180px'
                        }, {
                            name: 'EmployeeRate',
                            title: 'Rate',
                            align: 'center',
                            valign: 'middle',
                            width: '60px',
                        }, {
                            name: 'TotalHours',
                            title: 'Total Hours',
                            align: 'center',
                            valign: 'middle',
                            width: '100px'
                        }, {
                            name: 'TotalHoursRate',
                            title: 'Total Hours\n(Rate)',
                            align: 'center',
                            valign: 'middle',
                            width: '100px'
                        }];


                    if (data.TimeEntriesGroupByEmployeesView.length == 0) {
                        return;
                    }

                    // 补充动态列
                    // TODO: 这里缺一些，如果一个人第一周没干活，第三周才开始干，以第一个人的时间是不合理的，要按照所有人的时间做。

                    // 找出第一周，找出最后一周
                    var firstWeek = 100;
                    var lastWeek = 0;

                    $.each(data.TimeEntriesGroupByEmployeesView, function (j, timeEntriesGroupByEmployees) {
                        $.each(timeEntriesGroupByEmployees.TotalEffortByWeek, function (i, item) {
                            if (item.WeekNumber < firstWeek) {
                                firstWeek = item.WeekNumber;
                            }
                            if (item.WeekNumber > lastWeek) {
                                lastWeek = item.WeekNumber;
                            }
                        });
                    });


                    for (var i = firstWeek; i <= lastWeek; i++) {
                        addColumn(i, columns);
                    }


                    // 处理每行数据，动态增加data.TimeEntriesGroupByEmployeesView的列
                    $.each(data.TimeEntriesGroupByEmployeesView, function (i, timeEntriesGroupByEmployeesView) {
                        // 这边是人的级别
                        for (var i = firstWeek; i <= lastWeek; i++) {
                            timeEntriesGroupByEmployeesView['W' + i] = 0;
                        }

                        $.each(timeEntriesGroupByEmployeesView.TotalEffortByWeek, function (j, totalEffortByWeek) {
                            // 这里循环所有的week，合适的填数据
                            timeEntriesGroupByEmployeesView['W' + totalEffortByWeek.WeekNumber] = totalEffortByWeek.TotalHours;

                        });

                        delete timeEntriesGroupByEmployeesView.Id;
                        delete timeEntriesGroupByEmployeesView.UserId;
                        delete timeEntriesGroupByEmployeesView.TotalEffortByWeek;
                    });

                    initTable(columns, data.TimeEntriesGroupByEmployeesView);
                }
            });

        });

        //function initTable(columns, data1) {
        //    $('#table').bootstrapTable('destroy').bootstrapTable({
        //        //url: "GetTimesheetThisweekByGroup",
        //        //method: "post",
        //        //queryParams: {
        //        //    groupId: $('#Group').val(),
        //        //    year: $('#Year').val(),
        //        //    week: $('#Week').val()
        //        //},
        //        data: data1,
        //        toolbar: "#toolbar",
        //        striped: true,                      //是否显示行间隔色
        //        cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
        //        pagination: true,                   //是否显示分页（*）
        //        sortable: true,                     //是否启用排序
        //        sortOrder: "asc",                   //排序方式
        //        //sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
        //        //pageNumber: 1,                      //初始化加载第一页，默认第一页,并记录
        //        //pageSize: 10,                       //每页的记录行数（*）
        //        //pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
        //        search: true,                      //是否显示表格搜索
        //        strictSearch: false,
        //        showColumns: false,                   //是否显示所有的列（选择显示的列）
        //        showRefresh: true,                  //是否显示刷新按钮
        //        minimumCountColumns: 4,             //最少允许的列数
        //        clickToSelect: true,                //是否启用点击选中行
        //        //height: 500,                      //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
        //        //uniqueId: "ID",                     //每一行的唯一标识，一般为主键列
        //        showToggle: true,                   //是否显示详细视图和列表视图的切换按钮
        //        cardView: false,                    //是否显示详细视图
        //        detailView: false,                  //是否显示父子表
        //        showFooter: true,
        //        fixedColumns: true,
        //        fixedNumber: 2, //固定列数
        //        //height: 600,
        //        leftFixedColumns: true,
        //        leftFixedNumber: 5,
        //        //rightFixedColumns: false,
        //        //rightFixedNumber: 2,
        //        columns: columns
        //    });
        //}

        function initTable(columns, data1) {
            var container = document.getElementById('table')

            table = jexcel(container, {
                data: data1,
                tableOverflow: true,
                tableWidth: "100%",
                tableHeight: "100%",
                freezeColumns: 5,
                footers: [['Total', '', '', '=SUMCOL(TABLE(), COLUMN())', '=SUMCOL(TABLE(), COLUMN())']],
                columns: columns
            });
        }


        function getQueryVariable(variable) {
            var query = window.location.search.substring(1);
            var vars = query.split("&");
            for (var i = 0; i < vars.length; i++) {
                var pair = vars[i].split("=");
                if (pair[0] == variable) { return pair[1]; }
            }
            return (false);
        }

        function sortNumber(a, b) {//升序
            return a - b
        }

        function addColumn(weekNumber, columns) {
            columns.push({
                name: 'W' + weekNumber,
                title: 'W' + weekNumber,
                align: 'center',
                valign: 'middle',
                width: '60px'
            });
        }

        // A custom method to SUM all the cells in the current column
        var SUMCOL = function (instance, columnId) {
            var total = 0;
            for (var j = 0; j < instance.options.data.length; j++) {
                if (Number(instance.records[j][columnId - 1].innerHTML)) {
                    total += Number(instance.records[j][columnId - 1].innerHTML);
                }
            }
            return total;
        }

    </script>
}