{"version":3,"sources":["jquery.fileupload-angular.js"],"names":[],"mappings":"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","file":"jquery.fileupload-angular-compiled.js","sourcesContent":["/*\n * jQuery File Upload AngularJS Plugin\n * https://github.com/blueimp/jQuery-File-Upload\n *\n * Copyright 2013, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * http://www.opensource.org/licenses/MIT\n */\n\n/* jshint nomen:false */\n/* global define, angular */\n\n;(function (factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        // Register as an anonymous AMD module:\n        define([\n            'jquery',\n            'angular',\n            './jquery.fileupload-image',\n            './jquery.fileupload-audio',\n            './jquery.fileupload-video',\n            './jquery.fileupload-validate'\n        ], factory);\n    } else {\n        factory();\n    }\n}(function () {\n    'use strict';\n\n    angular.module('blueimp.fileupload', [])\n\n        // The fileUpload service provides configuration options\n        // for the fileUpload directive and default handlers for\n        // File Upload events:\n        .provider('fileUpload', function () {\n            var scopeEvalAsync = function (expression) {\n                    var scope = angular.element(this)\n                            .fileupload('option', 'scope');\n                    // Schedule a new $digest cycle if not already inside of one\n                    // and evaluate the given expression:\n                    scope.$evalAsync(expression);\n                },\n                addFileMethods = function (scope, data) {\n                    var files = data.files,\n                        file = files[0];\n                    angular.forEach(files, function (file, index) {\n                        file._index = index;\n                        file.$state = function () {\n                            return data.state();\n                        };\n                        file.$processing = function () {\n                            return data.processing();\n                        };\n                        file.$progress = function () {\n                            return data.progress();\n                        };\n                        file.$response = function () {\n                            return data.response();\n                        };\n                    });\n                    file.$submit = function () {\n                        if (!file.error) {\n                            return data.submit();\n                        }\n                    };\n                    file.$cancel = function () {\n                        return data.abort();\n                    };\n                },\n                $config;\n            $config = this.defaults = {\n                handleResponse: function (e, data) {\n                    var files = data.result && data.result.files;\n                    if (files) {\n                        data.scope.replace(data.files, files);\n                    } else if (data.errorThrown ||\n                            data.textStatus === 'error') {\n                        data.files[0].error = data.errorThrown ||\n                            data.textStatus;\n                    }\n                },\n                add: function (e, data) {\n                    if (e.isDefaultPrevented()) {\n                        return false;\n                    }\n                    var scope = data.scope,\n                        filesCopy = [];\n                    angular.forEach(data.files, function (file) {\n                        filesCopy.push(file);\n                    });\n                    scope.$parent.$applyAsync(function () {\n                        addFileMethods(scope, data);\n                        var method = scope.option('prependFiles') ?\n                                'unshift' : 'push';\n                        Array.prototype[method].apply(scope.queue, data.files);\n                    });\n                    data.process(function () {\n                        return scope.process(data);\n                    }).always(function () {\n                        scope.$parent.$applyAsync(function () {\n                            addFileMethods(scope, data);\n                            scope.replace(filesCopy, data.files);\n                        });\n                    }).then(function () {\n                        if ((scope.option('autoUpload') ||\n                                data.autoUpload) &&\n                                data.autoUpload !== false) {\n                            data.submit();\n                        }\n                    });\n                },\n                done: function (e, data) {\n                    if (e.isDefaultPrevented()) {\n                        return false;\n                    }\n                    var that = this;\n                    data.scope.$apply(function () {\n                        data.handleResponse.call(that, e, data);\n                    });\n                },\n                fail: function (e, data) {\n                    if (e.isDefaultPrevented()) {\n                        return false;\n                    }\n                    var that = this,\n                        scope = data.scope;\n                    if (data.errorThrown === 'abort') {\n                        scope.clear(data.files);\n                        return;\n                    }\n                    scope.$apply(function () {\n                        data.handleResponse.call(that, e, data);\n                    });\n                },\n                stop: scopeEvalAsync,\n                processstart: scopeEvalAsync,\n                processstop: scopeEvalAsync,\n                getNumberOfFiles: function () {\n                    var scope = this.scope;\n                    return scope.queue.length - scope.processing();\n                },\n                dataType: 'json',\n                autoUpload: false\n            };\n            this.$get = [\n                function () {\n                    return {\n                        defaults: $config\n                    };\n                }\n            ];\n        })\n\n        // Format byte numbers to readable presentations:\n        .provider('formatFileSizeFilter', function () {\n            var $config = {\n                // Byte units following the IEC format\n                // http://en.wikipedia.org/wiki/Kilobyte\n                units: [\n                    {size: 1000000000, suffix: ' GB'},\n                    {size: 1000000, suffix: ' MB'},\n                    {size: 1000, suffix: ' KB'}\n                ]\n            };\n            this.defaults = $config;\n            this.$get = function () {\n                return function (bytes) {\n                    if (!angular.isNumber(bytes)) {\n                        return '';\n                    }\n                    var unit = true,\n                        i = 0,\n                        prefix,\n                        suffix;\n                    while (unit) {\n                        unit = $config.units[i];\n                        prefix = unit.prefix || '';\n                        suffix = unit.suffix || '';\n                        if (i === $config.units.length - 1 || bytes >= unit.size) {\n                            return prefix + (bytes / unit.size).toFixed(2) + suffix;\n                        }\n                        i += 1;\n                    }\n                };\n            };\n        })\n\n        // The FileUploadController initializes the fileupload widget and\n        // provides scope methods to control the File Upload functionality:\n        .controller('FileUploadController', [\n            '$scope', '$element', '$attrs', '$window', 'fileUpload',\n            function ($scope, $element, $attrs, $window, fileUpload) {\n                var uploadMethods = {\n                    progress: function () {\n                        return $element.fileupload('progress');\n                    },\n                    active: function () {\n                        return $element.fileupload('active');\n                    },\n                    option: function (option, data) {\n                        if (arguments.length === 1) {\n                            return $element.fileupload('option', option);\n                        }\n                        $element.fileupload('option', option, data);\n                    },\n                    add: function (data) {\n                        return $element.fileupload('add', data);\n                    },\n                    send: function (data) {\n                        return $element.fileupload('send', data);\n                    },\n                    process: function (data) {\n                        return $element.fileupload('process', data);\n                    },\n                    processing: function (data) {\n                        return $element.fileupload('processing', data);\n                    }\n                };\n                $scope.disabled = !$window.jQuery.support.fileInput;\n                $scope.queue = $scope.queue || [];\n                $scope.clear = function (files) {\n                    var queue = this.queue,\n                        i = queue.length,\n                        file = files,\n                        length = 1;\n                    if (angular.isArray(files)) {\n                        file = files[0];\n                        length = files.length;\n                    }\n                    while (i) {\n                        i -= 1;\n                        if (queue[i] === file) {\n                            return queue.splice(i, length);\n                        }\n                    }\n                };\n                $scope.replace = function (oldFiles, newFiles) {\n                    var queue = this.queue,\n                        file = oldFiles[0],\n                        i,\n                        j;\n                    for (i = 0; i < queue.length; i += 1) {\n                        if (queue[i] === file) {\n                            for (j = 0; j < newFiles.length; j += 1) {\n                                queue[i + j] = newFiles[j];\n                            }\n                            return;\n                        }\n                    }\n                };\n                $scope.applyOnQueue = function (method) {\n                    var list = this.queue.slice(0),\n                        i,\n                        file;\n                    for (i = 0; i < list.length; i += 1) {\n                        file = list[i];\n                        if (file[method]) {\n                            file[method]();\n                        }\n                    }\n                };\n                $scope.submit = function () {\n                    this.applyOnQueue('$submit');\n                };\n                $scope.cancel = function () {\n                    this.applyOnQueue('$cancel');\n                };\n                // Add upload methods to the scope:\n                angular.extend($scope, uploadMethods);\n                // The fileupload widget will initialize with\n                // the options provided via \"data-\"-parameters,\n                // as well as those given via options object:\n                $element.fileupload(angular.extend(\n                    {scope: $scope},\n                    fileUpload.defaults\n                )).on('fileuploadadd', function (e, data) {\n                    data.scope = $scope;\n                }).on('fileuploadfail', function (e, data) {\n                    if (data.errorThrown === 'abort') {\n                        return;\n                    }\n                    if (data.dataType &&\n                            data.dataType.indexOf('json') === data.dataType.length - 4) {\n                        try {\n                            data.result = angular.fromJson(data.jqXHR.responseText);\n                        } catch (ignore) {}\n                    }\n                }).on([\n                    'fileuploadadd',\n                    'fileuploadsubmit',\n                    'fileuploadsend',\n                    'fileuploaddone',\n                    'fileuploadfail',\n                    'fileuploadalways',\n                    'fileuploadprogress',\n                    'fileuploadprogressall',\n                    'fileuploadstart',\n                    'fileuploadstop',\n                    'fileuploadchange',\n                    'fileuploadpaste',\n                    'fileuploaddrop',\n                    'fileuploaddragover',\n                    'fileuploadchunksend',\n                    'fileuploadchunkdone',\n                    'fileuploadchunkfail',\n                    'fileuploadchunkalways',\n                    'fileuploadprocessstart',\n                    'fileuploadprocess',\n                    'fileuploadprocessdone',\n                    'fileuploadprocessfail',\n                    'fileuploadprocessalways',\n                    'fileuploadprocessstop'\n                ].join(' '), function (e, data) {\n                    $scope.$parent.$applyAsync(function () {\n                        if ($scope.$emit(e.type, data).defaultPrevented) {\n                            e.preventDefault();\n                        }\n                    });\n                }).on('remove', function () {\n                    // Remove upload methods from the scope,\n                    // when the widget is removed:\n                    var method;\n                    for (method in uploadMethods) {\n                        if (uploadMethods.hasOwnProperty(method)) {\n                            delete $scope[method];\n                        }\n                    }\n                });\n                // Observe option changes:\n                $scope.$watch(\n                    $attrs.fileUpload,\n                    function (newOptions) {\n                        if (newOptions) {\n                            $element.fileupload('option', newOptions);\n                        }\n                    }\n                );\n            }\n        ])\n\n        // Provide File Upload progress feedback:\n        .controller('FileUploadProgressController', [\n            '$scope', '$attrs', '$parse',\n            function ($scope, $attrs, $parse) {\n                var fn = $parse($attrs.fileUploadProgress),\n                    update = function () {\n                        var progress = fn($scope);\n                        if (!progress || !progress.total) {\n                            return;\n                        }\n                        $scope.num = Math.floor(\n                            progress.loaded / progress.total * 100\n                        );\n                    };\n                update();\n                $scope.$watch(\n                    $attrs.fileUploadProgress + '.loaded',\n                    function (newValue, oldValue) {\n                        if (newValue !== oldValue) {\n                            update();\n                        }\n                    }\n                );\n            }\n        ])\n\n        // Display File Upload previews:\n        .controller('FileUploadPreviewController', [\n            '$scope', '$element', '$attrs',\n            function ($scope, $element, $attrs) {\n                $scope.$watch(\n                    $attrs.fileUploadPreview + '.preview',\n                    function (preview) {\n                        $element.empty();\n                        if (preview) {\n                            $element.append(preview);\n                        }\n                    }\n                );\n            }\n        ])\n\n        .directive('fileUpload', function () {\n            return {\n                controller: 'FileUploadController',\n                scope: true\n            };\n        })\n\n        .directive('fileUploadProgress', function () {\n            return {\n                controller: 'FileUploadProgressController',\n                scope: true\n            };\n        })\n\n        .directive('fileUploadPreview', function () {\n            return {\n                controller: 'FileUploadPreviewController'\n            };\n        })\n\n        // Enhance the HTML5 download attribute to\n        // allow drag&drop of files to the desktop:\n        .directive('download', function () {\n            return function (scope, elm) {\n                elm.on('dragstart', function (e) {\n                    try {\n                        e.originalEvent.dataTransfer.setData(\n                            'DownloadURL',\n                            [\n                                'application/octet-stream',\n                                elm.prop('download'),\n                                elm.prop('href')\n                            ].join(':')\n                        );\n                    } catch (ignore) {}\n                });\n            };\n        });\n\n}));\n"]}