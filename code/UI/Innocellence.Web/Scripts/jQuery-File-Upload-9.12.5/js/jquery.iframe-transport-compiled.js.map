{"version":3,"sources":["jquery.iframe-transport.js"],"names":[],"mappings":"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","file":"jquery.iframe-transport-compiled.js","sourcesContent":["/*\n * jQuery Iframe Transport Plugin\n * https://github.com/blueimp/jQuery-File-Upload\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * http://www.opensource.org/licenses/MIT\n */\n\n/* global define, require, window, document */\n\n;(function (factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        // Register as an anonymous AMD module:\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object') {\n        // Node/CommonJS:\n        factory(require('jquery'));\n    } else {\n        // Browser globals:\n        factory(window.jQuery);\n    }\n}(function ($) {\n    'use strict';\n\n    // Helper variable to create unique names for the transport iframes:\n    var counter = 0;\n\n    // The iframe transport accepts four additional options:\n    // options.fileInput: a jQuery collection of file input fields\n    // options.paramName: the parameter name for the file form data,\n    //  overrides the name property of the file input field(s),\n    //  can be a string or an array of strings.\n    // options.formData: an array of objects with name and value properties,\n    //  equivalent to the return data of .serializeArray(), e.g.:\n    //  [{name: 'a', value: 1}, {name: 'b', value: 2}]\n    // options.initialIframeSrc: the URL of the initial iframe src,\n    //  by default set to \"javascript:false;\"\n    $.ajaxTransport('iframe', function (options) {\n        if (options.async) {\n            // javascript:false as initial iframe src\n            // prevents warning popups on HTTPS in IE6:\n            /*jshint scripturl: true */\n            var initialIframeSrc = options.initialIframeSrc || 'javascript:false;',\n            /*jshint scripturl: false */\n                form,\n                iframe,\n                addParamChar;\n            return {\n                send: function (_, completeCallback) {\n                    form = $('<form style=\"display:none;\"></form>');\n                    form.attr('accept-charset', options.formAcceptCharset);\n                    addParamChar = /\\?/.test(options.url) ? '&' : '?';\n                    // XDomainRequest only supports GET and POST:\n                    if (options.type === 'DELETE') {\n                        options.url = options.url + addParamChar + '_method=DELETE';\n                        options.type = 'POST';\n                    } else if (options.type === 'PUT') {\n                        options.url = options.url + addParamChar + '_method=PUT';\n                        options.type = 'POST';\n                    } else if (options.type === 'PATCH') {\n                        options.url = options.url + addParamChar + '_method=PATCH';\n                        options.type = 'POST';\n                    }\n                    // IE versions below IE8 cannot set the name property of\n                    // elements that have already been added to the DOM,\n                    // so we set the name along with the iframe HTML markup:\n                    counter += 1;\n                    iframe = $(\n                        '<iframe src=\"' + initialIframeSrc +\n                            '\" name=\"iframe-transport-' + counter + '\"></iframe>'\n                    ).bind('load', function () {\n                        var fileInputClones,\n                            paramNames = $.isArray(options.paramName) ?\n                                    options.paramName : [options.paramName];\n                        iframe\n                            .unbind('load')\n                            .bind('load', function () {\n                                var response;\n                                // Wrap in a try/catch block to catch exceptions thrown\n                                // when trying to access cross-domain iframe contents:\n                                try {\n                                    response = iframe.contents();\n                                    // Google Chrome and Firefox do not throw an\n                                    // exception when calling iframe.contents() on\n                                    // cross-domain requests, so we unify the response:\n                                    if (!response.length || !response[0].firstChild) {\n                                        throw new Error();\n                                    }\n                                } catch (e) {\n                                    response = undefined;\n                                }\n                                // The complete callback returns the\n                                // iframe content document as response object:\n                                completeCallback(\n                                    200,\n                                    'success',\n                                    {'iframe': response}\n                                );\n                                // Fix for IE endless progress bar activity bug\n                                // (happens on form submits to iframe targets):\n                                $('<iframe src=\"' + initialIframeSrc + '\"></iframe>')\n                                    .appendTo(form);\n                                window.setTimeout(function () {\n                                    // Removing the form in a setTimeout call\n                                    // allows Chrome's developer tools to display\n                                    // the response result\n                                    form.remove();\n                                }, 0);\n                            });\n                        form\n                            .prop('target', iframe.prop('name'))\n                            .prop('action', options.url)\n                            .prop('method', options.type);\n                        if (options.formData) {\n                            $.each(options.formData, function (index, field) {\n                                $('<input type=\"hidden\"/>')\n                                    .prop('name', field.name)\n                                    .val(field.value)\n                                    .appendTo(form);\n                            });\n                        }\n                        if (options.fileInput && options.fileInput.length &&\n                                options.type === 'POST') {\n                            fileInputClones = options.fileInput.clone();\n                            // Insert a clone for each file input field:\n                            options.fileInput.after(function (index) {\n                                return fileInputClones[index];\n                            });\n                            if (options.paramName) {\n                                options.fileInput.each(function (index) {\n                                    $(this).prop(\n                                        'name',\n                                        paramNames[index] || options.paramName\n                                    );\n                                });\n                            }\n                            // Appending the file input fields to the hidden form\n                            // removes them from their original location:\n                            form\n                                .append(options.fileInput)\n                                .prop('enctype', 'multipart/form-data')\n                                // enctype must be set as encoding for IE:\n                                .prop('encoding', 'multipart/form-data');\n                            // Remove the HTML5 form attribute from the input(s):\n                            options.fileInput.removeAttr('form');\n                        }\n                        form.submit();\n                        // Insert the file input fields at their original location\n                        // by replacing the clones with the originals:\n                        if (fileInputClones && fileInputClones.length) {\n                            options.fileInput.each(function (index, input) {\n                                var clone = $(fileInputClones[index]);\n                                // Restore the original name and form properties:\n                                $(input)\n                                    .prop('name', clone.prop('name'))\n                                    .attr('form', clone.attr('form'));\n                                clone.replaceWith(input);\n                            });\n                        }\n                    });\n                    form.append(iframe).appendTo(document.body);\n                },\n                abort: function () {\n                    if (iframe) {\n                        // javascript:false as iframe src aborts the request\n                        // and prevents warning popups on HTTPS in IE6.\n                        // concat is used to avoid the \"Script URL\" JSLint error:\n                        iframe\n                            .unbind('load')\n                            .prop('src', initialIframeSrc);\n                    }\n                    if (form) {\n                        form.remove();\n                    }\n                }\n            };\n        }\n    });\n\n    // The iframe transport returns the iframe content document as response.\n    // The following adds converters from iframe to text, json, html, xml\n    // and script.\n    // Please note that the Content-Type for JSON responses has to be text/plain\n    // or text/html, if the browser doesn't include application/json in the\n    // Accept header, else IE will show a download dialog.\n    // The Content-Type for XML responses on the other hand has to be always\n    // application/xml or text/xml, so IE properly parses the XML response.\n    // See also\n    // https://github.com/blueimp/jQuery-File-Upload/wiki/Setup#content-type-negotiation\n    $.ajaxSetup({\n        converters: {\n            'iframe text': function (iframe) {\n                return iframe && $(iframe[0].body).text();\n            },\n            'iframe json': function (iframe) {\n                return iframe && $.parseJSON($(iframe[0].body).text());\n            },\n            'iframe html': function (iframe) {\n                return iframe && $(iframe[0].body).html();\n            },\n            'iframe xml': function (iframe) {\n                var xmlDoc = iframe && iframe[0];\n                return xmlDoc && $.isXMLDoc(xmlDoc) ? xmlDoc :\n                        $.parseXML((xmlDoc.XMLDocument && xmlDoc.XMLDocument.xml) ||\n                            $(xmlDoc.body).html());\n            },\n            'iframe script': function (iframe) {\n                return iframe && $.globalEval($(iframe[0].body).text());\n            }\n        }\n    });\n\n}));\n"]}