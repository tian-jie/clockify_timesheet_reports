@{
    ViewBag.Title = "项目统计";
}
<div class="row">

    <div class="col-xs-12">

        <div class="widget-box">
            <label>项目ID：</label><label id="ProjectGid" class="data-projectGid"></label><br />
            <label>项目名称：</label><label id="ProjectName" class="data-projectName"></label><br />
            <label>项目估算总工时：</label><label id="EstimateEffort" class="data-estimateEffort"></label><br />
            <label>项目估算总费用：</label><label id="EstimateEffortRate" class="data-estimateEffortRate"></label><br />
            <label>项目花费总工时：</label><label id="SpentManHour" class="data-spentManHour"></label><br />
            <label>项目花费总费用：</label><label id="SpentManHourRate" class="data-spentManHourRate"></label><br />
            <label>项目花费百分比：</label><label id="UsedPercetange" class="data-spentManHourRate"></label><br />
        </div>
        <div class="widget-box">
            <div class="widget-content nopadding">
                <table class="table table-bordered data-table">
                    <thead>
                        <tr>
                            @*<th style="width: 8%; text-align: center;">Id</th>*@
                            <th style="width: 5%">Id</th>
                            <th style="width: 15%">Employee</th>
                            <th style="width: 15%">Role</th>
                            <th style="width: 15%">Rate</th>
                            <th style="width: 30%">Total Hours</th>
                            <th style="width: 30%">Total Hours(Rate)</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>

    </div>

</div>

@section scripts_Foot
{
    <script type="text/javascript">
        $(document).ready(function () {

            $.ajax({
                url: "GetProjectAccountingInfo",
                method: 'POST',
                data: {
                    projectGid: getQueryVariable("projectGid")
                },
                success: function (data) {
                    document.getElementById('ProjectGid').innerHTML = data.ProjectGid;
                    document.getElementById('ProjectName').innerHTML = data.ProjectName;
                    document.getElementById('EstimateEffort').innerHTML = data.EstimatedSpentManHour;
                    document.getElementById('EstimateEffortRate').innerHTML = data.EstimatedSpentManHourRate;
                    document.getElementById('SpentManHour').innerHTML = data.SpentManHour;
                    document.getElementById('SpentManHourRate').innerHTML = data.SpentManHourRate;
                    document.getElementById('UsedPercetange').innerHTML = (data.SpentManHourRate * 100 / data.EstimatedSpentManHourRate).toFixed(2) + '%';
                }
            });

            LEAP.Common.MainPop.options.dataTable = $('.data-table').dataTable(jQuery.extend(true, datatableSetting, {
                "ajax": { "url": "GetList" },
                "aoColumns": [
                    {
                        "mData": "Id",
                        "bSearchable": false,
                        "bSortable": false
                    },
                    {
                        "mData": "EmployeeName",
                        "bSearchable": false,
                        "bSortable": false
                    },
                    {
                        "mData": "EmployeeRole",
                        "bSearchable": false,
                        "bSortable": false
                    },
                    {
                        "mData": "EmployeeRate",
                        "bSearchable": false,
                        "bSortable": false
                    },
                    {
                        "mData": "TotalHours",
                        "bSearchable": false,
                        "bSortable": false
                    },
                    {
                        "mData": "TotalHoursRate",
                        "bSearchable": false,
                        "bSortable": false
                    }

                ],
                "columnDefs":
                    jQuery.extend(true, datatableSetting.columnDefs, [
                    ]),
                fnDrawCallback:
                    function (data) {
                        $('[data-toggle="tooltip"]').tooltip();
                    }
            }));

            $('.form_datatime').datetimepicker({
                format: 'yyyy-mm-dd hh:ii',
                weekStart: 1,
                autoclose: true,
                todayBtn: 'linked',
                clearBtn: true,
                language: 'zh-CN',
                startView: 2,
                minView: 0,
                onClose: function () {
                    this.focus();
                }
            });

            $('#clear_condition').click(function () {
                $('input').val('');
            });

        });

        function BeforeSearch() {
            //if ($('#startDate').val() > $('#endDate').val()) {
            //    artDialog.alert('结束时间不能小于开始时间。');
            //    return false;
            //}
            return true;
        }

        function mstime(mss) {
            //var days = parseInt(mss / (1000 * 60 * 60 * 24));
            var hours = parseInt(mss / (60 * 60));
            var minutes = parseInt((mss % (60 * 60)) / (60));
            var seconds = parseInt(mss % 60)
            var ref = "";
            if (hours < 10) {
                ref += "0" + hours + ":"
            } else {
                ref += hours + ":"
            }
            if (minutes < 10) {
                ref += "0" + minutes + ":"
            } else {
                ref += minutes + ":"
            }
            if (seconds < 10) {
                ref += "0" + seconds
            } else {
                ref += seconds
            }

            return ref;
        }

        var HtmlUtil = {
            /*1.用浏览器内部转换器实现html转码*/
            htmlEncode: function (html) {
                //1.首先动态创建一个容器标签元素，如DIV
                var temp = document.createElement("div");
                //2.然后将要转换的字符串设置为这个元素的innerText(ie支持)或者textContent(火狐，google支持)
                (temp.textContent != undefined) ? (temp.textContent = html) : (temp.innerText = html);
                //3.最后返回这个元素的innerHTML，即得到经过HTML编码转换的字符串了
                var output = temp.innerHTML;
                temp = null;
                return output;
            },
            /*2.用浏览器内部转换器实现html解码*/
            htmlDecode: function (text) {
                //1.首先动态创建一个容器标签元素，如DIV
                var temp = document.createElement("div");
                //2.然后将要转换的字符串设置为这个元素的innerHTML(ie，火狐，google都支持)
                temp.innerHTML = text;
                //3.最后返回这个元素的innerText(ie支持)或者textContent(火狐，google支持)，即得到经过HTML解码的字符串了。
                var output = temp.innerText || temp.textContent;
                temp = null;
                return output;
            }
        };

        function getQueryVariable(variable) {
            var query = window.location.search.substring(1);
            var vars = query.split("&");
            for (var i = 0; i < vars.length; i++) {
                var pair = vars[i].split("=");
                if (pair[0] == variable) { return pair[1]; }
            }
            return (false);
        }
    </script>
}